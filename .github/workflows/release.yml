# This is a basic workflow that is manually triggered

name: Release

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        description: 'Release Name'
        default: 'crypto-price-analyzer'
        required: true
        type: choice
        options: 
        - crypto-price-analyzer
      version:
        description: 'Release Version'
        default: 'vX.X.X'
        required: true
        type: text
      push_image:
        description: "Push Image to DockerHub"
        type: boolean
        default: 'true'
        
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the code
      uses: actions/checkout@master
    - name: Setup Maven
      uses: stCarolas/setup-maven@v4.2
      with:
        maven-version: 3.8.2
    - name: Maven Package - Native mode
      working-directory: app
      run: mvn package -q -Pnative
    - name: Build Quarkus Native container
      working-directory: app
      run: docker build -f src/main/docker/Dockerfile.native -t ${{ github.event.inputs.name }}:${{ github.event.inputs.version }} .
    - name: Save Image
      run: docker save -o image.tar ${{ github.event.inputs.name }}:${{ github.event.inputs.version }}
    - name: Check image size
      run: ls -hs image.tar
    - name: Archive image
      uses: actions/upload-artifact@v2
      with:
        name: image.tar
        path: image.tar

  dive-test:
    runs-on: ubuntu-latest
    needs: build  
    steps:
    - name: Checkout the code
      uses: actions/checkout@master
    - name: Download a single artifact
      uses: actions/download-artifact@v2
      with:
        name: image.tar
    - name: Install tools
      run: make install-ci-tools
    - name: Load docker image
      run: docker load -i image.tar
    - name: Run Dive Test
      run: dive --ci --config=cicd/dive-config.yaml ${{ github.event.inputs.name }}:${{ github.event.inputs.version }}

  trivy-test:
    runs-on: ubuntu-latest
    needs: build  
    steps:
    - name: Checkout the code
      uses: actions/checkout@master
    - name: Download a single artifact
      uses: actions/download-artifact@v2
      with:
        name: image.tar
    - name: Install tools
      run: make install-ci-tools
    - name: Load docker image
      run: docker load -i image.tar
    - name: Run Trivy Test
      run: trivy image ${{ github.event.inputs.name }}:${{ github.event.inputs.version }}

  dockle-test:
    runs-on: ubuntu-latest
    needs: build  
    steps:
    - name: Checkout the code
      uses: actions/checkout@master
    - name: Download a single artifact
      uses: actions/download-artifact@v2
      with:
        name: image.tar
    - name: Install tools
      run: make install-ci-tools
    - name: Load docker image
      run: docker load -i image.tar
    - name: Run Dockle Test
      run: dockle --exit-code 1 --exit-level fatal ${{ github.event.inputs.name }}:${{ github.event.inputs.version }}

  docker-slim:
    runs-on: ubuntu-latest
    needs: build  
    steps:
    - name: Checkout the code
      uses: actions/checkout@master
    - name: Download a single artifact
      uses: actions/download-artifact@v2
      with:
        name: image.tar
    - name: Install tools
      run: make install-ci-tools
    - name: Load docker image
      run: docker load -i image.tar
    - name: Run docker-slim
      run: docker-slim xray --target ${{ github.event.inputs.name }}:${{ github.event.inputs.version }}
      continue-on-error: true

  push:
    runs-on: ubuntu-latest
    needs:
    - dockle-test
    - trivy-test
    - dive-test
    steps:
    - name: Download a single artifact
      uses: actions/download-artifact@v2
      with:
        name: image.tar
    - name: Load docker image
      run: docker load -i image.tar
    - name: Login to registry
      env:
        CONTAINER_REGISTRY_USERNAME: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
        CONTAINER_REGISTRY_PASSWORD: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}
        CONTAINER_REGISTRY_REPOSITORY: witcherek7
      run: docker login -u ${CONTAINER_REGISTRY_USERNAME} -p ${CONTAINER_REGISTRY_PASSWORD}
    - name: Docker tag
      run: >
        echo 
        "
        docker tag 
        ${{ github.event.inputs.name }}:${{ github.event.inputs.version }} 
        $CONTAINER_REGISTRY_REPOSITORY/${{ github.event.inputs.name }}:${{ github.event.inputs.version }}
        "
        &&
        docker tag 
        ${{ github.event.inputs.name }}:${{ github.event.inputs.version }} 
        $CONTAINER_REGISTRY_REPOSITORY/${{ github.event.inputs.name }}:${{ github.event.inputs.version }}
    - name: Docker push
      run: >
        docker push $CONTAINER_REGISTRY_REPOSITORY/${{ github.event.inputs.name }}:${{ github.event.inputs.version }}
  tag:
    runs-on: ubuntu-latest
    needs: push
    steps:
    - name: Commit tagger
      uses: tvdias/github-tagger@v0.0.2
      with:
        repo-token:  ${{ github.token }}
        tag: ${{ github.event.inputs.version }}
        commit-sha: ${{ github.sha }}
    
